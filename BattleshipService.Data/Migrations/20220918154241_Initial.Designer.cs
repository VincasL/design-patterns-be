// <auto-generated />
using System;
using BattleshipService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BattleshipService.Data.Migrations
{
    [DbContext(typeof(BattleshipsDbContext))]
    [Migration("20220918154241_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BattleshipService.Data.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int>("MapSize")
                        .HasColumnType("int");

                    b.Property<int>("PlayerOneId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsFinished = false,
                            MapSize = 100,
                            PlayerOneId = 1,
                            PlayerTwoId = 2,
                            TimeStamp = new DateTimeOffset(new DateTime(2022, 9, 18, 15, 42, 41, 212, DateTimeKind.Unspecified).AddTicks(4116), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Game_Mine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("MineId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game_Mines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            MineId = 1,
                            PlayerId = 1,
                            TileId = 1
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            MineId = 1,
                            PlayerId = 2,
                            TileId = 2
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Game_Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("TileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game_Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            PlayerId = 1,
                            ShipId = 1,
                            TileId = 3
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            PlayerId = 2,
                            ShipId = 2,
                            TileId = 4
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Mine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Bomb_Mine"
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TileId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Moves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            PlayerId = 1,
                            TileId = 1,
                            TimeStamp = new DateTimeOffset(new DateTime(2022, 9, 18, 15, 42, 41, 212, DateTimeKind.Unspecified).AddTicks(4168), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vinkas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Marinis"
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDarkModeEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDarkModeEnabled = true
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Big Ship"
                        });
                });

            modelBuilder.Entity("BattleshipService.Data.Models.Tile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("XCoordinates")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinates")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            XCoordinates = 1,
                            YCoordinates = 1
                        },
                        new
                        {
                            Id = 2,
                            XCoordinates = 2,
                            YCoordinates = 1
                        },
                        new
                        {
                            Id = 3,
                            XCoordinates = 1,
                            YCoordinates = 2
                        },
                        new
                        {
                            Id = 4,
                            XCoordinates = 2,
                            YCoordinates = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
